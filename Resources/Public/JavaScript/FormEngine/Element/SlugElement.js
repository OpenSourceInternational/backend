/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
define(["require","exports","jquery"],(function(e,i,l){"use strict";var t,s;!function(e){e.toggleButton=".t3js-form-field-slug-toggle",e.recreateButton=".t3js-form-field-slug-recreate",e.inputField=".t3js-form-field-slug-input",e.readOnlyField=".t3js-form-field-slug-readonly",e.hiddenField=".t3js-form-field-slug-hidden"}(t||(t={})),function(e){e.AUTO="auto",e.RECREATE="recreate",e.MANUAL="manual"}(s||(s={}));return class{constructor(e,i){this.options=null,this.$fullElement=null,this.manuallyChanged=!1,this.$readOnlyField=null,this.$inputField=null,this.$hiddenField=null,this.xhr=null,this.fieldsToListenOn={},this.options=i,this.fieldsToListenOn=this.options.listenerFieldNames||{},l(()=>{this.$fullElement=l(e),this.$inputField=this.$fullElement.find(t.inputField),this.$readOnlyField=this.$fullElement.find(t.readOnlyField),this.$hiddenField=this.$fullElement.find(t.hiddenField),this.registerEvents()})}registerEvents(){const e=Object.keys(this.getAvailableFieldsForProposalGeneration()).map(e=>this.fieldsToListenOn[e]);e.length>0?("new"===this.options.command&&l(this.$fullElement).on("keyup",e.join(","),()=>{this.manuallyChanged||this.sendSlugProposal(s.AUTO)}),l(this.$fullElement).on("click",t.recreateButton,e=>{e.preventDefault(),this.$readOnlyField.hasClass("hidden")&&(this.$readOnlyField.toggleClass("hidden",!1),this.$inputField.toggleClass("hidden",!0)),this.sendSlugProposal(s.RECREATE)})):l(this.$fullElement).find(t.recreateButton).addClass("disabled").prop("disabled",!0),l(this.$inputField).on("keyup",()=>{this.manuallyChanged=!0,this.sendSlugProposal(s.MANUAL)}),l(this.$fullElement).on("click",t.toggleButton,e=>{e.preventDefault();const i=this.$readOnlyField.hasClass("hidden");this.$readOnlyField.toggleClass("hidden",!i),this.$inputField.toggleClass("hidden",i),i?(this.$inputField.val()!==this.$readOnlyField.val()?this.$readOnlyField.val(this.$inputField.val()):(this.manuallyChanged=!1,this.$fullElement.find(".t3js-form-proposal-accepted").addClass("hidden"),this.$fullElement.find(".t3js-form-proposal-different").addClass("hidden")),this.$hiddenField.val(this.$readOnlyField.val())):this.$hiddenField.val(this.$inputField.val())})}sendSlugProposal(e){const i={};e===s.AUTO||e===s.RECREATE?(l.each(this.getAvailableFieldsForProposalGeneration(),(e,t)=>{i[e]=l('[data-formengine-input-name="'+t+'"]').val()}),!0===this.options.includeUidInValues&&(i.uid=this.options.recordId.toString())):i.manual=this.$inputField.val(),null!==this.xhr&&4!==this.xhr.readyState&&this.xhr.abort(),this.xhr=l.post(TYPO3.settings.ajaxUrls.record_slug_suggest,{values:i,mode:e,tableName:this.options.tableName,pageId:this.options.pageId,parentPageId:this.options.parentPageId,recordId:this.options.recordId,language:this.options.language,fieldName:this.options.fieldName,command:this.options.command,signature:this.options.signature},i=>{i.hasConflicts?(this.$fullElement.find(".t3js-form-proposal-accepted").addClass("hidden"),this.$fullElement.find(".t3js-form-proposal-different").removeClass("hidden").find("span").text(i.proposal)):(this.$fullElement.find(".t3js-form-proposal-accepted").removeClass("hidden").find("span").text(i.proposal),this.$fullElement.find(".t3js-form-proposal-different").addClass("hidden")),this.$hiddenField.val()!==i.proposal&&this.$fullElement.find("input").trigger("change"),e===s.AUTO||e===s.RECREATE?(this.$readOnlyField.val(i.proposal),this.$hiddenField.val(i.proposal),this.$inputField.val(i.proposal)):this.$hiddenField.val(i.proposal)},"json")}getAvailableFieldsForProposalGeneration(){const e={};return l.each(this.fieldsToListenOn,(i,t)=>{l('[data-formengine-input-name="'+t+'"]').length>0&&(e[i]=t)}),e}}}));